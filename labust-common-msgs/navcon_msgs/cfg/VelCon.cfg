#!/usr/bin/env python
PACKAGE = "navcon_msgs"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

dofs = ["Surge", "Sway", "Heave", "Roll", "Pitch", "Yaw"];

mode_enum = gen.enum([gen.const("Disable", int_t, 0, "Disabled"),
         gen.const("Manual", int_t, 1, "Joystick"),
         gen.const("VelCon", int_t, 2, "Controller"),
         gen.const("Identify", int_t, 3, "Identification"),
         gen.const("DirectCon", int_t, 4, "Direct force/torque control.")],"OpMode")

for dof in dofs:
	#group = gen.add_group(dof+"DOF")
	#group.add(dof+"_mode_2", int_t, 0, dof + " control mode", 0, edit_method=mode_enum)
	gen.add(dof+"_mode", int_t, 0, dof + " control mode", 0, edit_method=mode_enum)
	gen.add(dof+"_Kp", double_t, 0, dof + " proportional part.",0,0)
	gen.add(dof+"_Ki", double_t, 0, dof + " integral part.",0,0)
	gen.add(dof+"_ident_amplitude", double_t, 0, dof + " identification amplitude.",0,-1000,1000)
	gen.add(dof+"_ident_hysteresis", double_t, 0, dof + " identification input.",0,-100,100)
	gen.add(dof+"_ident_ref", double_t, 0, dof + " identification input.",0,-100,100)
	gen.add(dof+"_joy_scale", double_t, 0, dof + " joystick prescaler.",1,-1000,1000)
	
gen.add("High_level_controller", str_t, 0, "The available high level controllers to use.","None")
gen.add("Use_high_level_controller", int_t, 0, "The available high level controllers to use.",0,10);
	
exit(gen.generate(PACKAGE, "VelocityController", "VelCon"))